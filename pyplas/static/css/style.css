.only-inq {
  display: none;
}

.blocked-bi:before {
  display: block;
}

/* when offcanvas show (larger than lg) */
@media (min-width: 993px) { 
  .sidebar {
    position: sticky;
    top: 0px;
    overflow-y: auto;
    max-height: calc(100vh);
  }
}

/* ========
  accordion 
=========== */
.accordion-button:focus {
  box-shadow: none;
  border-color: rgba(0,0,0,.125);
}
.accordion-button:not(.collapsed) {
  opacity: 100%;
  background-color: white;
}


/* ===================
  p-content, q-content
====================== */
/* 共通 */
:is(.p-content, .q-content) {
  border: dotted;
  background-color: rgb(242 243 247);
  padding: 1rem 0rem;
  .node-control {
      margin-left: 1rem;
  }
} /* 内部にNodeオブジェクトが存在する場合 */
:is(.p-content, .q-content):has(:is(.explain, .code, .question)) {
  .node-control:hover {
      .btn-group {
          .btn {
              display: inline;
              padding: 0.2rem 0.5rem;
              line-height: 1rem;
              border: none;
              border-radius: 0;
          }
      }
  }
  .node-control .btn-group .btn {
      display: none;
  }
  .bi-file-earmark-code {
      display: none;
  }
} /* .p-content内部にNodeオブジェクトが存在しない場合 */
.p-content:not(:has(:is(.explain, .code, .question))) {
  text-align: center;
  height: 350px;
  .bi-file-earmark-code {
      display: block;
      font-size: 200px;
      margin-top: auto;
      opacity: 0.6;
  }
} /* .q-content内部にNodeオブジェクトが存在しない場合 */
.q-content:not(:has(:is(.explain, .code, .question))) {
  .node-control .btn-group .btn {
      display: inline;
      padding: 0.2rem 0.5rem;
      line-height: 1rem;
      border: none;
      border-radius: 0;
  }
}


/* ===========
  Explain Node
============== */
.explain {
  p {
    margin-bottom: 0.5rem;
  }
}


/* ==========
  Code Node
============= */
.code {
  display: flex;
  .node-side {
      padding-top: 0.15rem;
      .btn {
        padding: 0rem;
        border: none;
        i {
          font-size: 1.1rem;
        }
        i:before {
          padding: 0.1rem;
        }
        .spinner-border {
          width: 0.9rem;
          height: 0.9rem;
        }
      }
      .btn:hover{
        i:before {
          color: white;
        }
      }
      .executing {
        display: none;
        padding: 0rem 0.2rem;
      }
  }
  .node-side.running {
    .btn-exec {
      display: none;
    }
    .executing {
      display: block;
    }
  }
  .node-prime {
      width: 100%;
      .code-config {
        height: 1.7rem;
        border-radius: 5px;
        z-index: 1;
        display: flex;
        position: absolute;
        right: 0;
        top: 0;
        .btn {
          height: 1.5rem;
          padding: 0.2rem 0.3rem;
          margin: 0.1rem;
          i {
            font-size: 0.9rem;
          }
        }
      }
      .return-box {
          position: relative;
          padding: 0.1rem 0 1rem 0;
          .node-sidebutton {
            position: absolute;
            transform: translate(-100%, -100%);
            top: 0;
            left: 0;
          }
          p {
              padding: 0 1rem;
              margin-bottom: 0rem;
              white-space: pre-wrap;
              font-size: 0.7rem;
          }
      }
  }
}

/* ============
  question Node 
=============== */
.question {
  .toast.status-success {
    border: solid var(--bs-success);
    background-color: rgb(182 216 182);
    .toast-header {
      i {
        color: var(--bs-success);
      }
      span::before {
        content: "SUCCESS";
        color: var(--bs-success);
      }
    }
  } 
/* toast */ 
  .toast.status-error {
    border: solid var(--bs-danger); 
    background-color: #ffdddd;
    .toast-header {
      i {
        color: var(--bs-danger);
      }
      span::before {
        content: "ERROR";
        color: var(--bs-danger);
      }
    }
    .toast-body {
      white-space: pre-wrap;
      font-size: 0.6rem;
      overflow-y: auto;
      max-height: 10rem;
    }
  }
/* card-header */
  .card-header {
    .btn {
      height: 1.5rem;
      padding: 0.2rem;
      i {
        font-size: 0.9rem;
        &::before {
          display: block;
        }
      }
    }
  }
/* card-body */
  .card-body {
    .mde  .toolbar  .only-inq { display: block; } 
  }
}


/* 各question Nodeの進捗バッチ */
*[progress="0"] {
  .progress-badge {
    background-color: var(--bs-gray-300);
    color: var(--bs-dark);
    &::before {
      content: "Untried";
    }
  }
}
*[progress="1"] {
  .progress-badge {
    background-color: var(--bs-warning);
    color: var(--bs-dark);
    &::before {
      content: "Tried"
    }
  }
}
*[progress="2"] {
  .progress-badge {
    background-color: var(--bs-success);
    &::before {
      content: "Complete"
    }
  }
}


#question-nav {
  .nav-link.active {
    background-color: var(--bs-success-bg-subtle);
    color: var(--bs-dark);
  }
}