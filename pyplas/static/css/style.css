.only-inq {
  display: none;
}

.blocked-bi:before {
  display: block;
}

.active-node {
    border-left: solid 0.5rem var(--bs-primary);
    border-radius: 2%;
    margin-left: 0 !important;
}

/* when offcanvas show (larger than lg) */
@media (min-width: 993px) { 
  .sidebar {
    position: sticky;
    top: 10%;
    overflow-y: auto;
    max-height: calc(100vh);
  }
}

/* =============
  node container 
================ */
#nodesContainer > .explain {
  margin-left: 1rem !important;
}
#nodesContainer > :is(.explain, .code, .question) {
  margin-bottom: 1.5rem !important;
}

/* =============
  progress-bar 
================ */
@keyframes animation-sample{
  0%{
      left: 0%;
  }
  100%{
      left: 100%;
  }
}
.progress-bar{
  animation-name: animation-sample;
  animation-duration: 2s;
  animation-iteration-count: infinite;
}


/* ========
  accordion 
=========== */
.accordion-button:focus {
  box-shadow: none;
  border-color: rgba(0,0,0,.125);
}
.accordion-button:not(.collapsed) {
  opacity: 100%;
  background-color: white;
}


/* =======================
  dynamic-nodes-container
========================== */
/* 共通 */
.dynamic-nodes-container {
  border: dotted;
  background-color: rgb(247 247 247);
} 
/* 共通 内部にNodeオブジェクトが存在する場合 */
.dynamic-nodes-container:has(.node) {
  .node-control {
    .btn-group {
      height: auto;
    }
    .btn {
      display: none;
    }
  }
  .node-control:hover {
    .btn {
        display: inline;
        border-radius: 0;
        padding: 0 4px;
        border: none;
    }
  }
  .bi-file-earmark-code, #loadIpynb, .ipynb-loader {
      display: none;
  }
}
/* .dynamic-nodes-container内部にNodeオブジェクトが存在しない場合
     (#nodeContainerをもつ場合)
 */
.dynamic-nodes-container#nodesContainer:not(:has(.node)) {
  text-align: center;
  height: auto;
  .bi-file-earmark-code {
      display: block;
      font-size: 200px;
      margin-top: auto;
      opacity: 0.6;
  }
} 
/* .dynamic-nodes-container内部にNodeオブジェクトが存在しない場合
     (answer-contentをもつ場合)
 */
.dynamic-nodes-container.answer-content:not(:has(.node)) {
  .node-control {
    .btn {
      display: inline;
      border-radius: 0;
      padding: 0 4px;
      border: none;
    }
  }
}

/* ===========
  editor
============== */
.editor {
  height: auto;
  padding-bottom: 1rem;
  box-sizing: content-box;
}

/* ===========
  Explain Node
============== */
.explain {
  p {
    margin-bottom: 0.5rem;
  }
  pre {margin-bottom: 0.5rem;}
  pre > code {
    display: block;
    padding: 0.5rem !important;
  }
}


/* ==========
  Code Node
============= */
.code {
  display: flex;
  .node-side {
      padding-top: 0.15rem;
      .btn {
        padding: 0rem;
        border: none;
        i {font-size: 1.1rem;}
        i:before {padding: 0.1rem;}
        .spinner-border {
          width: 0.9rem;
          height: 0.9rem;
        }
      }
      .btn:hover{
        i:before {
          color: white;
        }
      }
      .btn-interrupt {padding: 0rem 0.2rem;}
  }
  .node-prime {
      .code-config {
        height: 1.7rem;
        border-radius: 5px;
        .btn {
          height: 1.5rem;
          padding: 0.2rem 0.3rem;
          margin: 0.1rem;
          i {font-size: 0.9rem;}
        }
        .dropdown.code-options:not(:has(.dropdown-item)) {
          display: none;
        }
      }
      .return-box {
          padding: 0.1rem 0 1rem 0;
          p {
              padding: 0 1rem;
              margin-bottom: 0rem;
              white-space: pre-wrap;
              font-size: 0.7rem;
          }
      }
  }
}
.code[run-state] > .node-side {
  .btn-exec {display: block;}
  .executing {display: none;}
  .waiting {display: none;}
}
.code[run-state="running"] > .node-side {
  .btn-exec {display: none;}
  .executing {display: block;}
  .waiting {display: none;}
}
.code[run-state="suspending"] > .node-side {
  .btn-exec {display: none;}
  .executing {display: none;}
  .waiting {display: block;}
}


/* ============
  question Node 
=============== */
.question {
/* card-header */
  .card-header {
    .btn {
      height: 1.5rem;
      padding: 0.2rem;
      i {
        font-size: 0.9rem;
        &::before {
          display: block;
        }
      }
    }
  }
/* card-body */
  .card-body {
    .mde  .toolbar  .only-inq { display: block; } 
    .question-options > .dropdown-toggle::after {content: none;}
    .node-control .toggle-addQ {display: none !important;}
  }
}
.question[progress="1"] {
  .toast {
    border: solid var(--bs-danger);
    background-color: #ffdddd;
    .toast-header {
      i { color: var(--bs-danger)}
      span::before {
        content: "ERROR";
        color: var(--bs-danger)
      }
    }
  }
}
.question[progress="2"] {
  .toast {
    border: solid var(--bs-success);
    background-color: rgb(182 216 182);
    .toast-header {
      i { color: var(--bs-success)}
      span::before {
        content: "SUCCESS";
        color: var(--bs--success)
      }
    }
  }
}


/* 各question Nodeの進捗バッチ */
*[progress="0"] {
  .progress-badge {
    background-color: var(--bs-gray-300);
    color: var(--bs-dark);
    &::before {
      content: "Untried";
    }
  }
}
*[progress="1"] {
  .progress-badge {
    background-color: var(--bs-warning);
    color: var(--bs-dark);
    &::before {
      content: "Tried"
    }
  }
}
*[progress="2"] {
  .progress-badge {
    background-color: var(--bs-success);
    &::before {
      content: "Complete"
    }
  }
}


#question-nav {
  .nav-link.active {
    background-color: var(--bs-success-bg-subtle);
    color: var(--bs-dark);
  }
}